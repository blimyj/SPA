1 - Follows and Follows*
assign a; while w; call c;
Select BOOLEAN such that Follows (a, w) and Follows* (w, c) pattern a ("zero", "ichi + ni + san + yon + go + roku + nana + hachi + kyuu")
TRUE
5000
2 - Follows and Parent
assign a; while w;
Select BOOLEAN such that Follows (w, _) and Parent (w, a) pattern w ("nana", _) and a (_, _"2"_)
TRUE
5000
3 - Follows* and Modifies
if i; variable v;
Select BOOLEAN such that Follows* (12, i) and Modifies (i, v) pattern i (v, _, _)
TRUE
5000
4 - Follows and Uses
stmt s; if i; variable v;
Select BOOLEAN such that Follows (s, i) and Modifies (s, v) pattern i (v, _, _)
TRUE
5000
5 - Follows and Next* and Uses
stmt s; assign a;
Select BOOLEAN such that Follows (s, a) and Next* (a, s) and Uses (a, "ichi") pattern a ("zero", _)
TRUE
5000
6 - Parent and Parent*
while w; if i;
Select BOOLEAN such that Parent (i, w) and Parent* (i, 24) pattern w ("yon", _) and i ("san", _, _)
FALSE
5000
7 - Parent* and Modifies and Uses
while w; if i; stmt s; variable v;
Select BOOLEAN such that Parent* (w, s) and Modifies (i, v) and Uses (s, v) pattern w ("ichi", _) and i ("go", _, _)
TRUE
5000
8 - Modifies and Modfies and Modifies
assign a1, a2, a3; variable v;
Select BOOLEAN such that Modifies (a1, v) and Modifies (a2, v) and Modifies (a3, v) pattern a1 (v, "kyuu + hachi") and a2 (_, "hachi + kyuu") and a3 (v, _)
TRUE
5000
9 - Uses and Uses and Uses
assign a1, a2, a3; variable v;
Select BOOLEAN such that Uses (a1, v) and Uses (a2, v) and Uses (a3, v) pattern a1 ("nana", _) and a2 (_, _) and a3 ("hachi", _"kyuu"_)
TRUE
5000
10 - Modifies and Uses and Calls
procedure p; if i;
Select BOOLEAN such that Modifies (i, "ichi") and Uses (p, "ni") and Calls (p, "ninth") pattern i (_, _, _)
TRUE
5000
11 - Assign patterns
assign a1, a2, a3, a4, a5, a6, a7;
Select BOOLEAN such that Follows (a1, a2) and Follows (a2, a3) and Next (a3, a4) and Next (a4, a5) and Follows (a5, a6) and Next (a6, a7) pattern a1 ("zero", _) and a2 (_, _"ni + san"_) and a3 ("ni", _"san + yon + go"_) and a4 (_, _) and a5 ("yon", "go + roku + nana + hachi + kyuu")
TRUE
5000
12 - If patterns
if i1, i2, i3, i4, i5;
Select BOOLEAN such that Uses (i1, "ichi") and Uses (i2, "ni") and Uses (i3, "san") and Uses (i4, "yon") and Uses (i5, "go") pattern i1 ("go", _, _) and i2 ("yon", _, _) and i3 ("san", _, _) and i4 ("ni", _, _) and i5 ("ichi", _, _)
FALSE
5000
13 - While patterns
while w1, w2, w3;
Select BOOLEAN such that Modifies (w1, "ichi") and Modifies (w2, "ni") and Modifies (w3, "nana") pattern w1 ("ichi", _) and w2 ("ni", _) and w3 ("nana", _)
TRUE
5000
14 - Affects assign pattern
assign a1, a2, a3, a4;
Select BOOLEAN such that Affects (a1, a2) and Affects (a3, a4) pattern a1 (_, _"ichi + ni"_) and a4 (_, "ichi - ni")
TRUE
5000
15 - Follows and Follows*
assign a; while w; call c;
Select c.procName such that Follows (a, w) and Follows* (w, c) pattern a ("zero", "ichi + ni + san + yon + go + roku + nana + hachi + kyuu")
seventh
5000
16 - Follows and Parent
assign a; while w;
Select a.stmt# such that Follows (w, _) and Parent (w, a) pattern w ("nana", _) and a (_, _"2"_)
44, 46
5000
17 - Follows* and Modifies
if i; variable v;
Select v such that Follows* (12, i) and Modifies (i, v) pattern i (v, _, _)
ni, go
5000
18 - Follows and Uses
stmt s; if i; variable v;
Select i such that Follows (s, i) and Modifies (s, v) pattern i (v, _, _)
16,24,58,78
5000
19 - Follows and Next* and Uses
stmt s; assign a; variable v;
Select a such that Follows (s, a) and Next* (a, s) and Uses (a, v) pattern a (v, _)
8
5000
20 - Parent and Parent*
while w; if i;
Select <i, w> such that Parent (i, w) and Parent* (i, 26) pattern w ("yon", _) and i ("zero", _, _)
22 30
5000
21 - Parent* and Modifies and Uses
while w; if i; stmt s; variable v;
Select v.varName such that Parent* (w, s) and Modifies (i, v) and Uses (s, v) pattern w ("ichi", _) and i ("go", _, _)
zero, ichi, ni, san, yon, go, roku, nana, hachi, kyuu
5000
22 - Modifies and Modfies and Modifies
assign a1, a2, a3; variable v;
Select <a1, a2, a3> such that Modifies (a1, v) and Modifies (a2, v) and Modifies (a3, v) pattern a1 (v, "kyuu + hachi") and a2 (_, "hachi + kyuu") and a3 (v, _)
13 98 13, 13 98 98
5000
23 - Uses and Uses and Uses
assign a1, a2, a3; variable v;
Select v such that Uses (a1, v) and Uses (a2, v) and Uses (a3, v) pattern a1 ("nana", _) and a2 (_, _) and a3 ("hachi", _"kyuu"_)
kyuu
5000
24 - Modifies and Uses and Calls
procedure p; if i; variable v;
Select i.stmt# such that Modifies (i, v) and Uses (p, v) and Calls (p, "ninth") pattern i (v, _, _)
16, 22, 24, 58, 78, 87
5000
25 - If patterns
if i1, i2, i3, i4, i5;
Select i1 such that Uses (i1, "ichi") and Uses (i2, "ni") and Parent (i1, i2) pattern i1 ("go", _, _) and i2 ("yon", _, _)
22
5000
26 - While patterns
while w1, w2, w3; variable v;
Select w1 such that Modifies (w1, "ichi") and Modifies (w2, "ni") and Modifies (w3, v) pattern w1 (v, _) and w2 (v, _) and w3 (v, _)
2, 40, 41, 42, 45, 49
5000
27 - Affects assign pattern
assign a1, a2, a3, a4;
Select a1 such that Affects (a1, a2) and Affects (a3, a4) pattern a1 (_, _"ichi + ni"_) and a4 (_, "ichi - ni")
44
5000
28 - Follows and Follows*
assign a; while w; call cl;
Select <a, w, cl.procName> pattern a ("zero", "ichi + ni + san + yon + go + roku + nana + hachi + kyuu") such that Follows (a, w) and Follows* (w, cl)
1 2 seventh
5000
29 - Uses, Uses, Uses, Modifies
variable v1, v2, v3; assign a;
Select <v1, v2, v3> such that Uses (a, v1) and Uses (a, v2) and Uses (a, v3) and Modifies (a, v1) pattern a ("san", _)
san san san
5000
30 - Modifies, Modifies, Modifies
assign a1, a2, a3; variable v;
Select <a1, a2, a3> such that Modifies (a1, v) and Modifies (a2, v) and Modifies (a3, v) pattern a1 (v, "ichi - ni") and a2 (v, _"zero"_) and a3 (v, "0")
66 46 72, 66 46 100
5000
31 - Parent, Uses, Modifies
if i; variable v; assign a;
Select <i, v.varName> such that Parent (i, a) and Modifies (i, v) and Uses (i, v) pattern a (v, _) and i (_, _, _)
16 ni, 16 hachi, 24 hachi, 58 zero, 78 hachi
5000
32 - Calls, Uses, Modifies
procedure p; variable v; while w;
Select <p, w> such that Calls (p, "tenth") and Modifies (w, v) pattern w ("hachi", _)
third 41, fourth 41, sixth 41, seventh 41, ninth 41, third 42, fourth 42, sixth 42, seventh 42, ninth 42
5000
33 - Next, Next*, Next
call cl; if i; while w; print pn;
Select <cl.procName, i, w> such that Next (i, cl) and Next* (i, w) and Next (w, pn) pattern i ("go", _, _) and w ("go", _)
fourth 22 30
5000
34 - Affects, Affects*, Affects
assign a1, a2, a3, a4;
Select <a1, a2, a2> such that Affects (a1, a2) and Affects* (a2, a3) and Affects (a3, a4) pattern a1 ("ichi", "zero - nana + 8") and a2 ("kyuu", _"ni"_) and a3 (_, _) and a4 ("go", _)
none
5000
35 - Assign patterns
assign a1, a2, a3, a4, a5, a6, a7;
Select <a1, a2.stmt#, a3, a4.stmt#, a5, a6.stmt#, a7> such that Follows (a1, a2) and Follows (a2, a3) and Next (a3, a4) and Next (a4, a5) and Follows (a5, a6) and Next (a6, a7) pattern a1 ("zero", _) and a2 (_, _"ni + san"_) and a3 ("ni", _"san + yon + go"_) and a4 (_, _) and a5 ("yon", "go + roku + nana + hachi + kyuu")
91 92 93 94 95 96 97
5000
36 - Follows
assign a; constant const;
Select BOOLEAN such that Follows (a, 2) pattern a ("zero", _"ichi + ni + san"_) with a.stmt# = const.value
TRUE
5000
37 - Parent
while w;
Select BOOLEAN such that Parent (w, 5) pattern w ("ichi", _) with w.stmt# = 2
TRUE
5000
38 - Modifies
if i; assign a;
Select BOOLEAN such that Modifies (i, "hachi") pattern i ("yon", _, _) and a ("hachi", _"4"_) with i.stmt# = 24
TRUE
5000
39 - Uses
assign a; variable v;
Select BOOLEAN such that Uses (a, v) pattern a (v, _) with v.varName = "san"
TRUE
5000
40 - Calls
if i;
Select BOOLEAN such that Calls ("first", "third") pattern i ("zero", _, _) with i.stmt# = 22
TRUE
5000
41 - Next
assign a; while w;
Select BOOLEAN such that Next(w, a) pattern a ("kyuu", _) with w.stmt# = 45 and a.stmt# = 46
TRUE
5000
42 - Follows* and Next*
assign a;
Select BOOLEAN such that Follows* (a, 66) and Next* (63, a) pattern a ("ichi", "zero - nana + 8") with a.stmt# = 64
FALSE
5000
43 - Modifies and Uses
while w; if i; variable v;
Select BOOLEAN such that Modifies (w, v) and Uses (i, v) pattern i (v, _, _) and w (v, _) with v.varName = "ichi"
TRUE
5000
44 - Calls and Modifies and Uses
procedure p; variable v; assign a;
Select BOOLEAN such that Modifies (p, v) and Uses (a, v) and Calls (p, "sixth") pattern a ("kyuu", "ichi - ni") with v.varName = "ni"
TRUE
5000
45 - Next* and Next* and Next* and Next*
assign a; while w; print pn; call c;
Select BOOLEAN such that Next* (w , a) and Next* (a, c) and Next* (c, pn) and Next* (pn, w) pattern a (_, _"2"_) and w ("nana", _) with c.stmt# = 47
TRUE
5000
46 - Affects
stmt s; assign a;
Select BOOLEAN such that Affects (s, a) pattern a ("kyuu", _) with s.stmt# = 44
TRUE
5000
47 - Affects*
assign a; print pn;
Select BOOLEAN such that Affects* (65, 66) pattern a (_, "zero - nana + 8") with pn.stmt# = 63 and pn.varName = "ichi"
TRUE
5000
48 - Affects, Parent* and Parent*
assign a1, a2; stmt s1, s2;
Select BOOLEAN such that Affects (a1, a2) and Parent* (s1, a1) and Parent* (s2, a2) pattern a1 ("san", _) and a2 (_, _"san"_) with a1.stmt# = a2.stmt#
FALSE
5000
49 - Can we Imitate an Affects?
assign a; stmt s; variable v;
Select BOOLEAN such that Modifies (a, v) and Uses (s, v) and Next* (a, s) pattern a (v, _) with a.stmt# = 8 and v.varName = "san"
TRUE
5000
50 - No we cannot imiate an Affects easily
assign a; stmt s; variable v;
Select BOOLEAN such that Affects (a, s) pattern a (v, _) with v.varName = "san"
FALSE
5000
51 - Follows
assign a; constant cs;
Select cs.value such that Follows (a, 2) pattern a ("zero", _"ichi + ni + san"_) with a.stmt# = cs.value
1
5000
52 - Parent
while w; read r;
Select r.stmt# such that Parent (w, r) pattern w ("ichi", _) with w.stmt# = 2
5
5000
53 - Modifies
if i;
Select i such that Modifies (i, "yon") pattern i ("yon", _, _) with i.stmt# = 24
24
5000
54 - Uses
assign a; variable v;
Select a such that Uses (a, v) pattern a (v, _) with v.varName = "san"
8
5000
55 - Next
assign a; while w;
Select w such that Next(w, a) pattern a ("kyuu", _) with w.stmt# = 45 and a.stmt# = 46
45
5000
56 - Calls and Uses and Modifies
if i; procedure pd; variable v;
Select v such that Calls (pd, "third") and Uses(i, v) and Modifies (pd, v) pattern i ("zero", _, _) with i.stmt# = 22
zero, ichi, ni, san, yon, go, roku, nana, hachi, kyuu
5000
57 - Next* and Next* and Next*
assign a1, a2, a3, a4;
Select a3 such that Next* (a1, a2) and Next* (a2, a3) and Next* (a3, a4) pattern a1 (_, _"ni"_) and a2 ("roku", _) and a3 (_, _"3"_) and a4 (_, _) with a1.stmt# = a2.stmt# and a2.stmt# = a3.stmt# and a3.stmt# = a4.stmt#
50
5000
58 - Follows*, Parent* and Parent*
if i; assign a; stmt s;
Select i such that Follows* (s, a) and Parent* (i, a) and Parent* (i, s) pattern a (_, _"4"_) and i ("go", _, _) with s.stmt# = 26
22, 24
5000
59 - Parent and Uses and Modifies and Calls*
if i1, i2; procedure p; variable v;
Select i1 such that Parent (i1, i2) and Uses (i1, v) and Uses (p, v) and Calls (p, "fourth") pattern i1 ("zero", _, _) and i2 ("yon", _, _) with p.procName = "third" and v.varName = "ichi"
22
5000
60 - Modifies, Uses, Uses
assign a; variable v1, v2, v3, v4;
Select a.stmt# such that Modifies (a, v1) and Uses (a, v2) and Uses (a, v3) pattern a (_, _"kyuu"_) with v2.varName = "hachi" and v3.varName = "nana"
1, 91, 92, 93, 94, 95, 96, 97
5000
61 - Follows*, Follows*, Follows*
assign a; read r; print pn; call cl;
Select r such that Follows* (r, pn) and Follows* (pn, cl) and Follows* (cl, a) pattern a (_, _"nana"_) with cl.procName = "tenth"
83
5000
62 - Uses, Uses, Uses, Next, Next*
while w1, w2, w3; variable v;
Select w3 such that Uses (w1, v) and Uses (w2, v) and Uses (w3, v) and Next (w1, w2) and Next* (w2, w3) pattern w1 ("nana", _) and w2 ("ichi", _) with v.varName = "go"
40, 41, 42, 45, 49
5000
63- Affects
stmt s; assign a;
Select a such that Affects (s, a) pattern a ("kyuu", _) with s.stmt# = 44
46
5000
64 - Affects*
assign a1, a2;
Select a1 such that Affects* (a1, a2) pattern a1 ("zero", _) with a2.stmt# = 46
44
5000
65 - Affects, Parent* and Parent*
assign a1, a2; stmt s1, s2;
Select a1 such that Affects (a1, a2) and Parent* (s1, a1) and Parent* (s2, a2) pattern a1 ("san", _) and a2 (_, _"san"_) with a1.stmt# = a2.stmt#
none
5000
66 - Can we Imitate an Affects?
assign a; stmt s; variable v;
Select s such that Modifies (a, v) and Uses (s, v) and Next* (a, s) pattern a (v, _) with a.stmt# = 8 and v.varName = "san"
2, 6, 7, 8, 11
5000
67 - No we cannot imiate an Affects easily
assign a; stmt s; variable v;
Select s such that Affects (a, s) pattern a (v, _) with v.varName = "san" and a.stmt# = 8
none
5000
68 - Affects* but we separate things out
assign a; print pn;
Select pn such that Affects* (65, 66) pattern a (_, "zero - nana + 8") with pn.stmt# = 63 and pn.varName = "ichi"
63
5000
69 - Calls and Uses and Modifies
if i; procedure pd; variable v;
Select <v, pd> such that Calls (pd, "third") and Uses(i, v) and Modifies (pd, v) pattern i ("zero", _, _) with i.stmt# = 22
zero first, ichi first, ni first, san first, yon first, go first, roku first, nana first, hachi first, kyuu first
5000
70 - Next* and Next* and Next*
assign a1, a2, a3, a4;
Select <a1, a2, a3, a4> such that Next* (a1, a2) and Next* (a2, a3) and Next* (a3, a4) pattern a1 (_, _"ni"_) and a2 ("roku", _) and a3 (_, _"3"_) and a4 (_, _) with a1.stmt# = a2.stmt# and a2.stmt# = a3.stmt# and a3.stmt# = a4.stmt#
50 50 50 50
5000
71 - Follows*, Parent* and Parent*
if i; assign a; stmt s;
Select <i, a> such that Follows* (s, a) and Parent* (i, a) and Parent* (i, s) pattern a (_, _"4"_) and i ("go", _, _) with s.stmt# = 26
22 27, 24 27
5000
72 - Parent and Uses and Modifies and Calls*
if i1, i2; procedure p; variable v;
Select <i1, i2> such that Parent (i1, i2) and Uses (i1, v) and Uses (p, v) and Calls (p, "fourth") pattern i1 ("zero", _, _) and i2 ("yon", _, _) with p.procName = "third" and v.varName = "ichi"
22 24
5000
73 - Modifies, Uses, Uses
assign a; variable v1, v2, v3;
Select <a.stmt#, v1.varName> such that Modifies (a, v1) and Uses (a, v2) and Uses (a, v3) pattern a (_, _"kyuu"_) with v2.varName = "hachi" and v3.varName = "nana"
1 zero, 91 zero, 92 ichi, 93 ni, 94 san, 95 yon, 96 go, 97 roku
5000
74 - Follows*, Follows*, Follows*
assign a; read r; print pn; call cl;
Select <r.stmt#, pn.stmt#> such that Follows* (r, pn) and Follows* (pn, cl) and Follows* (cl, a) pattern a (_, _"nana"_) with cl.procName = "tenth"
83 84
5000
75 - Uses, Uses, Uses, Next, Next*
while w1, w2, w3; variable v;
Select <w1, w2, w3> such that Uses (w1, v) and Uses (w2, v) and Uses (w3, v) and Next (w1, w2) and Next* (w2, w3) pattern w1 ("nana", _) and w2 ("ichi", _) with v.varName = "go" and w1.stmt# = 40
40 41 42, 40 41 45, 40 41 40, 40 41 41, 40 41 49
10000
76- Affects
stmt s; assign a;
Select <s, a> such that Affects (s, a) pattern a ("kyuu", _) with s.stmt# = 44
44 46
5000
77 - Affects*
assign a1, a2;
Select <a1, a2> such that Affects* (a1, a2) pattern a1 ("zero", _) with a2.stmt# = 46
44 46
5000
78 - Affects, Parent* and Parent*
assign a1, a2; stmt s1, s2;
Select <a1, a2> such that Affects (a1, a2) and Parent* (s1, a1) and Parent* (s2, a2) pattern a1 ("san", _) and a2 (_, _"san"_) with a1.stmt# = a2.stmt#
none
5000
79 - Can we Imitate an Affects?
assign a; stmt s; variable v;
Select <s, v> such that Modifies (a, v) and Uses (s, v) and Next* (a, s) pattern a (v, _) with a.stmt# = 8 and v.varName = "san"
2 san, 6 san, 7 san, 8 san, 11 san
5000
80 - No we cannot imiate an Affects easily
assign a; stmt s; variable v;
Select <s, v> such that Affects (a, s) pattern a (v, _) with v.varName = "san" and a.stmt# = 8
none
5000
81 - Affects* but separated
assign a; print pn;
Select <pn, a> such that Affects* (65, 66) pattern a (_, "zero - nana + 8") with pn.stmt# = 63 and pn.varName = "ichi"
63 65
5000
