1 - Follows, Follows*
stmt s1, s2, s3
Select s1 such that Follows (s1, s2) and Follows (s2, s3) with s2.stmt# = 11
10
5000
2 - Follows, Modifies, Uses
stmt s1, s2; variable v1, v2;
Select s1 such that Follows (s1, s2) and Modfies (s1, v1) and Uses (s2, v2) with v1.varName = "gold" and v2.varName = "lapis"
10
5000
3 - Modifies, Modfies, Calls, Calls*
procedure p; variable v; stmt s;
Select s such that Modifies (s, v) and Modifies (p, v) and Calls (p, "thirdore") and Calls* (p, "fifthore") with p.procName = "secondore"
4, 7, 10, 11, 15, 16, 22, 28, 30, 32, 34, 35, 38, 39, 43, 46, 48, 49
5000
4 - Parent, Parent*, Next, Next*
while w; assign a; read r; call c;
Select w such that Parent (w, a) and Parent* (w, r) and Next (w, a) and Next* (w, c) with c.procName = "fifthore"
36
5000
5 - Modifies, Modfies, Calls
variable v1, v2; procedure p1, p2;
Select <v1, v2> such that Modifies (p1, v1) and Modifies (p2, v2) and Calls (p1, p2) with p1.procName = "firstore"
<coal, emerald>, <coal, gold>, <coal, redstone>, <coal, diammond>, <lapis, emerald>, <lapis, gold>, <lapis, redstone>, <lapis, diammond>, <emerald, emerald>, <emerald, gold>, <emerald, redstone>, <emerald, diammond>
5000
6 - Calls*, Calls*
procedure p1, p2, p3;
Select p1.procNmae such that Calls* (p1, p2) and Calls* (p2, p3) with p2.procName = "thirdore"
secondore
5000
7 - Follows*, Uses, Next*
while w; if i; variable v;
Select <w, i> such that Follows* (w, i) and Uses (i, v) and Next(w, v) with v.varName = "coal"
<23, 26>
5000
8 - Modifies, Modifies, Uses, Uses
assign a1, a2, a3, a4; variable v1, v2;
Select <v1, v2> such that Modifies (a1, v1) and Modfies (a2, v2) and Uses (a3, v1) and Uses (a4, v2) with a1.stmt# = a2.stmt# and a3.stmt# = a4.stmt# and a1.stmt# = 35 and a3.stmt# = 39
<gold, iron>, <gold, coal>
5000
9 - Follows*, Next*
stmt s1, s2;
Select s1 such that Follows* (s1, s2) and Next* (s2, s1) with s2.stmt# = 38
37
5000
10 - Next*, Next*
stmt s1, s2; call c; procedure p;
Select c.procName such that Next* (s1, s2) and Next* (s2, c) with s1.stmt# = 11
thirdore, fourthore, fifthore
5000
